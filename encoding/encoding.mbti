package moonbitlang/x/encoding

alias @moonbitlang/core/buffer as @buffer

// Values
fn decoder(Encoding) -> Decoder

fn encode(Encoding, String) -> Bytes

fn to_utf16_bytes(Char) -> Bytes

fn to_utf16be_bytes(Char) -> Bytes

fn to_utf16le_bytes(Char) -> Bytes

fn to_utf8_bytes(Char) -> Bytes

fn write_utf16_char(@buffer.T, Char) -> Unit

fn write_utf16be_char(@buffer.T, Char) -> Unit

fn write_utf16le_char(@buffer.T, Char) -> Unit

fn write_utf8_char(@buffer.T, Char) -> Unit

// Types and methods
type Decoder
impl Decoder {
  decode(Self, Bytes) -> String!
}

pub(all) enum Encoding {
  UTF8
  UTF16
  UTF16LE
  UTF16BE
}

pub type! MalformedError Bytes

// Type aliases

// Traits

