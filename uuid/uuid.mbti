package "moonbitlang/x/uuid"

// Values
fn from_bytes(Bytes) -> UUID raise

fn from_hex(String) -> UUID raise

// Types and methods
type UUID
fn UUID::as_version(Self, Version) -> Self
fn UUID::hash(Self) -> Int
fn UUID::to_bytes(Self) -> Bytes
fn UUID::to_string(Self) -> String
fn UUID::variant(Self) -> Variant
fn UUID::version(Self) -> Version?
impl Compare for UUID
impl Eq for UUID
impl Show for UUID

pub(all) enum Variant {
  ReservedNCS
  RFC4122(Version)
  ReservedMicrosoft
  ReservedFuture
}
impl Show for Variant

pub(all) enum Version {
  V1
  V2
  V3
  V4
  V5
  Unknown(Int)
}
impl Show for Version

// Type aliases

// Traits

