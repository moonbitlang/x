package moonbitlang/x/benchmark

// Values
fn add(Criterion, Task) -> Unit

fn output(TaskResult, &Logger) -> Unit

fn run(Task) -> TaskResult

fn to_string(TaskResult) -> String

// Types and methods
type Criterion
impl Criterion {
  add(Self, Task) -> Unit
  new() -> Self
  run(Self) -> Map[String, TaskResult]
}

type Task
impl Task {
  new(String, () -> Unit, count~ : Int = ..) -> Self
  run(Self) -> TaskResult
}

pub struct TaskResult {
  task : Task
  average : Double
  max : Double
  min : Double
}
impl TaskResult {
  output(Self, &Logger) -> Unit
  to_string(Self) -> String
}

// Type aliases

// Traits

