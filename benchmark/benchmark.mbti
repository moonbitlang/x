package "moonbitlang/x/benchmark"

// Values
fn add(Criterion, Task) -> Unit

fn run(Task) -> TaskResult

// Types and methods
type Criterion
fn Criterion::add(Self, Task) -> Unit
fn Criterion::new() -> Self
fn Criterion::run(Self) -> Map[String, TaskResult]

type Task
fn Task::new(String, () -> Unit, count~ : Int = ..) -> Self
fn Task::run(Self) -> TaskResult

pub struct TaskResult {
  task : Task
  average : Double
  max : Double
  min : Double
}
impl Show for TaskResult

// Type aliases

// Traits

