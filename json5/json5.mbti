package moonbitlang/x/json5

// Values
fn parse(String) -> Json!ParseError

// Types and methods
pub(all) type! ParseError ParseErrorData
impl ParseError {
  output(Self, Logger) -> Unit
  to_string(Self) -> String
}

pub(all) enum ParseErrorData {
  InvalidChar(Position, Char)
  InvalidEof
  InvalidNumber(Position, String)
  InvalidIdentEscape(Position)
}
impl ParseErrorData {
  op_equal(Self, Self) -> Bool
}
impl Eq for ParseErrorData

pub(all) struct Position {
  line : Int
  column : Int
}
impl Position {
  op_equal(Self, Self) -> Bool
}
impl Eq for Position
impl Show for Position

// Type aliases

// Traits

